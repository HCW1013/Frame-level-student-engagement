# -*- coding: utf-8 -*-
"""DataFormatter.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1G4SY_jS8Lq7pNAa_lcffDli32WywKOIg
"""

import numpy as np
from sklearn.preprocessing import OneHotEncoder

class DataFormatter:
    def __init__(self, train_split, val_split):
        self.train_split = train_split
        self.val_split = val_split

    def dataframeFormat(self, df):
        idx_val = int(self.train_split * len(df))
        idx_test = int((self.train_split + self.val_split) * len(df))
        train = df[:idx_val]
        val = df[idx_val:idx_test]
        test = df[idx_test:]  

        x_train = train.iloc[:, :-1].values
        y_train = train.iloc[:, -1].values
        x_test = test.iloc[:, :-1].values
        y_test = test.iloc[:, -1].values
        x_val = val.iloc[:, :-1].values
        y_val = val.iloc[:, -1].values

        # Reshape input features to have a third dimension of 1
        x_train = np.array(x_train).reshape(x_train.shape[0], x_train.shape[1], 1)
        x_test = np.array(x_test).reshape(x_test.shape[0], x_test.shape[1], 1)
        x_val = np.array(x_val).reshape(x_val.shape[0], x_val.shape[1], 1)

        # Perform one-hot encoding on the target labels
        onehot_encoder = OneHotEncoder(sparse=False)

        y_train = y_train.reshape(len(y_train), 1)
        y_train = onehot_encoder.fit_transform(y_train)

        y_val = y_val.reshape(len(y_val), 1)
        y_val = onehot_encoder.transform(y_val)

        y_test = y_test.reshape(len(y_test), 1)
        y_test = onehot_encoder.transform(y_test)

        return x_train, x_val, x_test, y_train, y_val, y_test